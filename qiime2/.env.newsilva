#Config file for the services in the workflow using the Silva 138 reference database
#This conifg was used to generate the results in the project reprort


#ROOT CONFIGS
PRIMARY_EXP_ID = "MorganDataExperiments"
# The classifier to use for taxanomic classification
TC_CLASSIFIER="Silva_138"
# Experiment ID to use throughout the workflow
MAIN_EXP_ID="${PRIMARY_EXP_ID}/${TC_CLASSIFIER}"
# The root directory relative to the containers to use for the result storage
ROOT_DIR="./data/${PRIMARY_EXP_ID}/PRIMARY"
SUB_DIR="./data/${MAIN_EXP_ID}"

#MetadataCreator
MD_EXP_ID="${PRIMARY_EXP_ID}_Metadata"
MD_PARAMS="{}"
MD_OUT_DIR="${ROOT_DIR}"

#Manifest Creator
MC_EXP_ID="${PRIMARY_EXP_ID}_Manifest"
MC_SAMPLES='{"study_accession":"PRJNA82111"}'
MC_OUT_DIR="${ROOT_DIR}"

#Data Import
DI_EXP_ID="${PRIMARY_EXP_ID}_input"
DI_OUT_DIR="${ROOT_DIR}"
DI_PARAMS="{}"

#Quality Analysis
QA_EXP_ID="${PRIMARY_EXP_ID}_qa"
QA_OUT_DIR=${ROOT_DIR}/QA
QA_PARAMS='{"q_score":{},"deblur_denoise":{"trim_length":200,"jobs_to_start":24,"sample_stats":true}}'

#Taxa Classification
TC_EXP_ID="${MAIN_EXP_ID}_taxa_classification_${TC_CLASSIFIER}"
TC_OUT_DIR=${SUB_DIR}/classifications/${TC_CLASSIFIER}
TC_PARAMS='{"classifier":"${TC_CLASSIFIER}","classify_sklearn":{"n_jobs":4}}'

#Phylogenetic Tree
PT_EXP_ID="${MAIN_EXP_ID}_rooted_tree"
PT_OUT_DIR=${SUB_DIR}/rooted_tree
PT_PARAMS='{}'

#Frequency Tables
FT_EXP_ID="${MAIN_EXP_ID}_frequency_tables"
FT_OUT_DIR="${SUB_DIR}/freq_tab"
FT_PARAMS='{"level":7}'

#Alpha Diversity
AD_EXP_ID="${MAIN_EXP_ID}_alpha_diversity"
AD_OUT_DIR="${SUB_DIR}/alpha_diversity"
AD_PARAMS='{"random_seed":222,"metrics_sampling_depth":1153,
"alpha_diversity_metric":"shannon","beta_diversity":{"method":"permanova","pairwise":true},
"pcoa":{"number_of_features":10,"filter_extra_samples":true,"filter_missing_features":true,"ignore_missing_samples":true}}'

#Lefse
LA_EXP_ID="${MAIN_EXP_ID}_lefse"
LA_OUT_DIR="${SUB_DIR}/lefse"
LA_PARAMS='{}'

#Frequency Table To Biom Conversion
FTB_EXP_ID="${MAIN_EXP_ID}_biom"
FTB_OUT_DIR="${SUB_DIR}/freq_tab_biom"
FTB_PARAMS='{}'

#DA To Biom Conversion
DA_EXP_ID="${MAIN_EXP_ID}_differential_abundance"
DA_OUT_DIR="${SUB_DIR}/differential_abundance"
DA_PARAMS='{}'


##################
#MACHINE LEARNING#
##################
# Sub ecperiment name just for machine learing
ML_SUB = "JustFrequencyTables"

#Data Prep
DP_EXP_ID="${MAIN_EXP_ID}_ml_data_prep_${ML_SUB}"
DP_OUT_DIR="${SUB_DIR}/machine_learning_data/${ML_SUB}"
#- Will do just frequency tables as the training data to do other options change which DP parents is selected
DP_PARENTS = '[("${FTB_EXP_ID}","out_freq_table.tsv")]'
# Frequency tables + alpha diversity
#DP_PARENTS = '[("${FTB_EXP_ID}","out_freq_table.tsv"),("${AD_EXP_ID}","alpha_diversity.qza")]'

#Frequency tables filtered to lefse
#DP_PARENTS = '[("${FTB_EXP_ID}","out_freq_table.tsv"),("${LA_EXP_ID}","lefse_data.res")]'


DP_PARAMS='{"classifier_column":"dx"}'

#Random Forest
RF_EXP_ID="${MAIN_EXP_ID}_Random_Forest_${ML_SUB}"
RF_OUT_DIR="${SUB_DIR}/random_forest/${ML_SUB}"
RF_PARAMS='{"k_fold":{"n_splits":5,"shuffle":true,"random_state":42},
"rf_classifier":{"n_estimators":100,"min_samples_split":5,"min_samples_leaf":4,"random_state":42,"class_weight":"balanced"}}'